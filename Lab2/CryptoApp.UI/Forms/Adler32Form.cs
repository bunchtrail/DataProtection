using System;
using System.Text;
using System.Windows.Forms;

namespace Lab2
{
    // Форма для вычисления хеша алгоритма Adler-32
    public partial class Adler32Form : Form
    {
        // Конструктор формы: инициализирует компоненты формы
        public Adler32Form()
        {
            InitializeComponent();
        }

        // Обработчик нажатия кнопки "Вычислить"
        // Выполняет следующие шаги:
        // 1. Считывает текст из текстового поля ввода
        // 2. Преобразует текст в массив байт с использованием кодировки Windows-1251
        // 3. Вычисляет хеш Adler-32 для полученного массива байт
        // 4. Преобразует хеш в шестнадцатеричное представление и выводит его в текстовое поле
        private void buttonCompute_Click(object sender, EventArgs e)
        {
            // Считываем текст, введённый пользователем
            string inputText = textBoxInput.Text;

            // Преобразуем строку в массив байт с использованием кодировки Windows-1251.
            // Это гарантирует корректную обработку русских символов.
            byte[] data = Encoding.GetEncoding("windows-1251").GetBytes(inputText);

            // Вычисляем хеш методом Adler-32 для массива байт
            uint hash = ComputeAdler32(data);

            // Преобразуем полученный хеш в строку в шестнадцатеричном формате.
            // Формат "X8" обеспечивает вывод результата в виде 8 символов.
            string hashHex = hash.ToString("X8");

            // Выводим шестнадцатеричное представление хеша в соответствующее текстовое поле
            textBoxOutput.Text = hashHex;
        }

        /// <summary>
        /// Реализация алгоритма Adler-32 для вычисления контрольной суммы.
        /// Алгоритм использует две переменные: A и B.
        /// Начальные значения: A = 1, B = 0.
        /// Для каждого байта данных выполняется:
        ///   A = (A + текущий байт) mod MOD_ADLER;
        ///   B = (B + новое значение A) mod MOD_ADLER;
        /// Итоговый хеш формируется объединением B и A:
        ///   старшие 16 бит – значение B, младшие 16 бит – значение A.
        /// </summary>
        private uint ComputeAdler32(byte[] data)
        {
            // MOD_ADLER – простое число, используемое для взятия модуля
            const uint MOD_ADLER = 65521;

            // Инициализация сумматоров A и B
            uint A = 1;
            uint B = 0;

            // Проходим по каждому байту входных данных
            foreach (byte b in data)
            {
                // Обновляем A: прибавляем значение байта и вычисляем остаток от деления на MOD_ADLER
                A = (A + b) % MOD_ADLER;
                // Обновляем B: прибавляем новое значение A и берём остаток от деления на MOD_ADLER
                B = (B + A) % MOD_ADLER;
            }

            // Формируем итоговое 32-битное значение:
            // Сдвигаем B на 16 бит влево и объединяем с A с помощью побитового OR
            return (B << 16) | A;
        }

        // Обработчик нажатия кнопки "Вставить тестовые данные"
        // Устанавливает в текстовое поле ввода тестовую строку для быстрой проверки алгоритма
        private void buttonInsertTestData_Click(object sender, EventArgs e)
        {
            textBoxInput.Text = "Важно то, что дважды два четыре, а остальное все пустяки.";
        }
    }
}
